<Shader name="colorShader" autoinit="true" autobind="true">
    <VertexShader>
        <Uniform name="modelview_matrix" type="mat4f" />
        <Uniform name="projection_matrix" type="mat4f" />
        <Attrib name="a_Vertex" type="vec3" index="0" />
        <Attrib name="a_Color" type="vec4" index="1" />
        <Attrib name="a_TexCoord" type="vec2" index="2" />

        <Raw>
            #version 130

            uniform mat4 modelview_matrix;
            uniform mat4 projection_matrix;
            
            in vec3 a_Vertex;
            in vec4 a_Color;
            in vec2 a_TexCoord;
            
            out vec4 color;
            out vec2 texCoord;

            void main(void)
            {
                color = a_Color;
                texCoord = a_TexCoord;
                vec4 pos = modelview_matrix * vec4(a_Vertex, 1.0);
                gl_Position = projection_matrix * pos;
            }
        </Raw>
    </VertexShader>
    <GeometryShader/>
    <FragmentShader>
        <Uniform name="texture0" type="sampler2D" />
        <Uniform name="color" type="vec4"/>
        <Raw>
            #version 130

            precision highp float;
            
            uniform sampler2D texture0;
            uniform vec4 in_color;
            
            in vec4 color;
            in vec2 texCoord;
            
            out vec4 out_color;

            void main(void)
            {
                out_color = in_color;
                //out_color = texture2D(texture0, texCoord.st);
            }
        </Raw>
    </FragmentShader>
</Shader>

<Shader name="solidColorShader" autoinit="true" autobind="true">
	<VertexShader>
		<Uniform name="modelview_matrix" type="mat4f" />
		<Uniform name="projection_matrix" type="mat4f" />
		<Attrib name="a_Vertex" type="vec3f" index="0" />
		<Raw>
			#version 130

			uniform mat4 modelview_matrix;
			uniform mat4 projection_matrix;

			in vec3 a_Vertex;

			void main(void)
			{
				vec4 pos = modelview_matrix * vec4(a_Vertex, 1.0);
				gl_Position = projection_matrix * pos;
			}
		</Raw>
	</VertexShader>
	<FragmentShader>
		<Uniform name="color" type="vec4f" />
		<Raw>
			#version 130

			uniform vec4 color;

			out vec4 out_color;

			void main(void)
			{
				out_color = color;
			}
		</Raw>
	</FragmentShader>
</Shader>
